{"ast":null,"code":"var _jsxFileName = \"D:\\\\C_Fashion_Shopping\\\\Frontend\\\\src\\\\pages\\\\UserPage\\\\AuthenticatePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport toast from \"react-hot-toast\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport WelcomeScreen from '../../AuthForm/WelcomeScreen';\nimport LoginForm from '../../AuthForm/LoginForm';\nimport ForgotPassword from '../../AuthForm/ForgotPassword';\nimport RegisterForm from '../../AuthForm/RegisterForm';\nimport PersonalInfoForm from '../../AuthForm/PersonalInfoForm';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthenticatePage = () => {\n  _s();\n  const [step, setStep] = useState(\"welcome\");\n  const [formData, setFormData] = useState({\n    userCode: \"\",\n    email: \"\",\n    phone: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    fullName: \"\",\n    homeAddress: \"\",\n    birthday: \"\",\n    gender: \"\",\n    avatar: \"\",\n    officeAddress: \"\"\n  });\n  const [avatarPreview, setAvatarPreview] = useState(null);\n  const [accountId, setAccountId] = useState(null);\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleAvatarChange = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setAvatarPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const goToWelcome = () => setStep(\"welcome\");\n  const goToLogin = () => setStep(\"login\");\n  const goToRegister = () => setStep(\"register\");\n  const goToForgotPassword = () => setStep(\"forgotpassword\");\n  const handleLogin = async () => {\n    try {\n      if (!formData.email || !formData.password) {\n        toast.error(\"Vui lòng nhập đầy đủ thông tin đăng nhập!\");\n        return;\n      }\n      const response = await fetch(\"/api/login\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.message || data.token || 'Đăng nhập thất bại!');\n      toast.success(\"Đăng nhập thành công!\");\n\n      // Giải mã token để lấy thông tin người dùng\n      const decoded = jwtDecode(data.token);\n      const roles = decoded.roles.map(role => role.authority); // Lấy danh sách quyền\n\n      // Lưu token vào localStorage\n      localStorage.setItem(\"token\", data.token);\n      localStorage.setItem(\"accountId\", data.accountId);\n      if (roles.includes(\"ROLE_Admin\") || roles.includes(\"ROLE_Super_Admin\")) {\n        navigate(\"/admin\");\n      } else {\n        navigate(\"/\");\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Đăng nhập thất bại!');\n    }\n  };\n  const handleRegister = async () => {\n    try {\n      const response = await fetch('/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.message || data.token || 'Đăng ký thất bại!');\n\n      // Lưu accountId và token vào localStorage ngay sau khi đăng ký\n      const decoded = jwtDecode(data.token);\n      const accountId = decoded === null || decoded === void 0 ? void 0 : decoded.accountId;\n      setAccountId(accountId);\n      console.log(accountId);\n      console.log('Account ID from register:', data.accountId);\n      localStorage.setItem('accountId', data.accountId);\n      localStorage.setItem('token', data.token);\n\n      // Sau khi đăng ký thành công, tự động đăng nhập\n      const loginResponse = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          email: formData.email,\n          password: formData.password\n        })\n      });\n      const loginData = await loginResponse.json();\n      if (!loginResponse.ok) throw new Error(loginData.message || loginData.token || 'Đăng nhập thất bại!');\n\n      // Lưu lại thông tin đăng nhập vào localStorage\n      console.log('Account ID from login:', loginData.accountId);\n      localStorage.setItem('accountId', loginData.accountId);\n      localStorage.setItem('token', loginData.token);\n      toast.success('Đăng ký và đăng nhập thành công! Mời bạn nhập thông tin cá nhân của bạn');\n      setStep(\"personalInfo\");\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      toast.error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message || 'Đăng ký thất bại!');\n    }\n  };\n  const handleSubmitPersonalInfo = async () => {\n    try {\n      const formDataToSend = new FormData();\n\n      // Add personal info data\n      formDataToSend.append('fullName', formData.fullName);\n      formDataToSend.append('gender', formData.gender);\n      formDataToSend.append('homeAddress', formData.homeAddress);\n      formDataToSend.append('officeAddress', formData.officeAddress);\n      formDataToSend.append('birthday', formData.birthday);\n\n      // Add avatar if available\n      if (avatarPreview) {\n        const avatarFile = dataURLtoFile(avatarPreview, 'avatar.jpg'); // Convert avatar preview to file\n        formDataToSend.append('avatarFile', avatarFile);\n      }\n      const response = await fetch(`/api/information/${accountId}`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: formDataToSend\n      });\n      const data = await response.json();\n\n      // Kiểm tra lỗi kiểu dữ liệu và tự động xác nhận thành công\n      if (data.message && data.message.includes('Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]')) {\n        toast.success('Thông tin cá nhân đã được lưu thành công!');\n        navigate(\"/\");\n        return;\n      }\n      if (!response.ok) throw new Error(data.message || 'Cập nhật thông tin thất bại!');\n      toast.success('Thông tin cá nhân đã được lưu thành công!');\n      navigate(\"/\");\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      toast.error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message || 'Cập nhật thông tin thất bại!');\n      navigate(\"/\");\n    }\n  };\n\n  // Helper function to convert dataURL to File (for avatar image)\n  const dataURLtoFile = (dataUrl, filename) => {\n    const arr = dataUrl.split(',');\n    const mimeMatch = arr[0].match(/:(.*?);/);\n    if (!mimeMatch) {\n      throw new Error(\"Invalid data URL format\");\n    }\n    const mime = mimeMatch[1];\n    const bstr = atob(arr[1]);\n    let n = bstr.length; // Changed const to let\n    const u8arr = new Uint8Array(n);\n    while (n--) u8arr[n] = bstr.charCodeAt(n);\n    return new File([u8arr], filename, {\n      type: mime\n    });\n  };\n  axios.interceptors.response.use(response => response, async error => {\n    if (error.response.status === 401 && error.response.data.message === \"Token không hợp lệ hoặc đã hết hạn.\") {\n      const refreshTokenResponse = await axios.post('/api/refresh-token', {}, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (refreshTokenResponse.status === 200) {\n        localStorage.setItem('token', refreshTokenResponse.data.token);\n        error.config.headers['Authorization'] = `Bearer ${refreshTokenResponse.data.token}`;\n        return axios(error.config); // retry the failed request\n      }\n    }\n    return Promise.reject(error);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gradient-to-r from-blue-500 to-purple-600 p-6 relative overflow-hidden\",\n    children: [step === \"welcome\" && /*#__PURE__*/_jsxDEV(WelcomeScreen, {\n      goToLogin: goToLogin,\n      goToRegister: goToRegister\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 30\n    }, this), step === \"login\" && /*#__PURE__*/_jsxDEV(LoginForm, {\n      formData: formData,\n      handleChange: handleChange,\n      handleLogin: handleLogin,\n      goToWelcome: goToWelcome,\n      goToForgotPassword: goToForgotPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 28\n    }, this), step === \"forgotpassword\" && /*#__PURE__*/_jsxDEV(ForgotPassword, {\n      goToLogin: goToLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 37\n    }, this), step === \"register\" && /*#__PURE__*/_jsxDEV(RegisterForm, {\n      formData: formData,\n      handleChange: handleChange,\n      handleRegister: handleRegister,\n      goToWelcome: goToWelcome\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 31\n    }, this), step === \"personalInfo\" && /*#__PURE__*/_jsxDEV(PersonalInfoForm, {\n      formData: formData,\n      avatarPreview: avatarPreview,\n      handleChange: handleChange,\n      handleAvatarChange: handleAvatarChange,\n      handleSubmitPersonalInfo: handleSubmitPersonalInfo,\n      goToRegister: goToRegister\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthenticatePage, \"xZnKWFYV5BOZKaJ1nO+rIGhlax0=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthenticatePage;\nexport default AuthenticatePage;\nvar _c;\n$RefreshReg$(_c, \"AuthenticatePage\");","map":{"version":3,"names":["React","useState","toast","jwtDecode","useNavigate","WelcomeScreen","LoginForm","ForgotPassword","RegisterForm","PersonalInfoForm","axios","jsxDEV","_jsxDEV","AuthenticatePage","_s","step","setStep","formData","setFormData","userCode","email","phone","password","confirmPassword","fullName","homeAddress","birthday","gender","avatar","officeAddress","avatarPreview","setAvatarPreview","accountId","setAccountId","navigate","handleChange","e","target","name","value","handleAvatarChange","_e$target$files","file","files","reader","FileReader","onloadend","result","readAsDataURL","goToWelcome","goToLogin","goToRegister","goToForgotPassword","handleLogin","error","response","fetch","method","credentials","headers","body","JSON","stringify","data","json","ok","Error","message","token","success","decoded","roles","map","role","authority","localStorage","setItem","includes","_error$response","_error$response$data","handleRegister","console","log","loginResponse","Authorization","getItem","loginData","_error$response2","_error$response2$data","handleSubmitPersonalInfo","formDataToSend","FormData","append","avatarFile","dataURLtoFile","_error$response3","_error$response3$data","dataUrl","filename","arr","split","mimeMatch","match","mime","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","interceptors","use","status","refreshTokenResponse","post","config","Promise","reject","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/C_Fashion_Shopping/Frontend/src/pages/UserPage/AuthenticatePage.tsx"],"sourcesContent":["import React, { useState} from 'react';\r\nimport toast from \"react-hot-toast\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WelcomeScreen from '../../AuthForm/WelcomeScreen';\r\nimport LoginForm from '../../AuthForm/LoginForm';\r\nimport ForgotPassword from '../../AuthForm/ForgotPassword';\r\nimport RegisterForm from '../../AuthForm/RegisterForm';\r\nimport PersonalInfoForm from '../../AuthForm/PersonalInfoForm';\r\nimport axios from \"axios\";\r\n\r\nconst AuthenticatePage: React.FC = () => {\r\n  const [step, setStep] = useState<\"welcome\" | \"login\" | \"register\" | \"personalInfo\" | \"forgotpassword\">(\"welcome\");\r\n  const [formData, setFormData] = useState({\r\n    userCode: \"\", email: \"\", phone: \"\", password: \"\", confirmPassword: \"\",\r\n    fullName: \"\", homeAddress: \"\", birthday: \"\", gender: \"\", avatar: \"\", officeAddress: \"\"\r\n  });\r\n  const [avatarPreview, setAvatarPreview] = useState<string | null>(null);\r\n  const [accountId, setAccountId] = useState<string | null>(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleAvatarChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setAvatarPreview(reader.result as string);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const goToWelcome = () => setStep(\"welcome\");\r\n  const goToLogin = () => setStep(\"login\");\r\n  const goToRegister = () => setStep(\"register\");\r\n  const goToForgotPassword = () => setStep(\"forgotpassword\");\r\n  const handleLogin = async () => {\r\n    try {\r\n      if (!formData.email || !formData.password) {\r\n        toast.error(\"Vui lòng nhập đầy đủ thông tin đăng nhập!\");\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(\"/api/login\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (!response.ok) throw new Error(data.message || data.token || 'Đăng nhập thất bại!');\r\n\r\n      toast.success(\"Đăng nhập thành công!\");\r\n\r\n      // Giải mã token để lấy thông tin người dùng\r\n      const decoded: any = jwtDecode(data.token);\r\n      const roles = decoded.roles.map((role: any) => role.authority); // Lấy danh sách quyền\r\n\r\n      // Lưu token vào localStorage\r\n      localStorage.setItem(\"token\", data.token);\r\n      localStorage.setItem(\"accountId\", data.accountId);\r\n\r\n      if (roles.includes(\"ROLE_Admin\") || roles.includes(\"ROLE_Super_Admin\")) {\r\n        navigate(\"/admin\");\r\n      } else {\r\n        navigate(\"/\");\r\n      }\r\n    } catch (error: any) {\r\n      toast.error(error.response?.data?.message || error.message || 'Đăng nhập thất bại!');\r\n    }\r\n  };\r\n\r\n  const handleRegister = async () => {\r\n    try {\r\n      const response = await fetch('/api/register', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(formData),\r\n      });\r\n      const data = await response.json();\r\n      if (!response.ok) throw new Error(data.message || data.token || 'Đăng ký thất bại!');\r\n\r\n      // Lưu accountId và token vào localStorage ngay sau khi đăng ký\r\n      const decoded: any = jwtDecode(data.token);\r\n      const accountId = decoded?.accountId;\r\n      setAccountId(accountId);\r\n      console.log(accountId);\r\n      console.log('Account ID from register:', data.accountId);\r\n      localStorage.setItem('accountId', data.accountId);\r\n      localStorage.setItem('token', data.token);\r\n\r\n      // Sau khi đăng ký thành công, tự động đăng nhập\r\n      const loginResponse = await fetch('/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n        },\r\n        body: JSON.stringify({ email: formData.email, password: formData.password }),\r\n      });\r\n      const loginData = await loginResponse.json();\r\n      if (!loginResponse.ok) throw new Error(loginData.message || loginData.token || 'Đăng nhập thất bại!');\r\n\r\n      // Lưu lại thông tin đăng nhập vào localStorage\r\n      console.log('Account ID from login:', loginData.accountId);\r\n      localStorage.setItem('accountId', loginData.accountId);\r\n      localStorage.setItem('token', loginData.token);\r\n\r\n      toast.success('Đăng ký và đăng nhập thành công! Mời bạn nhập thông tin cá nhân của bạn');\r\n      setStep(\"personalInfo\");\r\n    } catch (error: any) {\r\n      toast.error(error.response?.data?.message || error.message || 'Đăng ký thất bại!');\r\n    }\r\n  };\r\n\r\n  const handleSubmitPersonalInfo = async () => {\r\n    try {\r\n      const formDataToSend = new FormData();\r\n\r\n      // Add personal info data\r\n      formDataToSend.append('fullName', formData.fullName);\r\n      formDataToSend.append('gender', formData.gender);\r\n      formDataToSend.append('homeAddress', formData.homeAddress);\r\n      formDataToSend.append('officeAddress', formData.officeAddress);\r\n      formDataToSend.append('birthday', formData.birthday);\r\n\r\n      // Add avatar if available\r\n      if (avatarPreview) {\r\n        const avatarFile = dataURLtoFile(avatarPreview, 'avatar.jpg'); // Convert avatar preview to file\r\n        formDataToSend.append('avatarFile', avatarFile);\r\n      }\r\n\r\n      const response = await fetch(`/api/information/${accountId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n        body: formDataToSend,\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      // Kiểm tra lỗi kiểu dữ liệu và tự động xác nhận thành công\r\n      if (data.message && data.message.includes('Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]')) {\r\n        toast.success('Thông tin cá nhân đã được lưu thành công!');\r\n        navigate(\"/\");\r\n        return;\r\n      }\r\n\r\n      if (!response.ok) throw new Error(data.message || 'Cập nhật thông tin thất bại!');\r\n\r\n      toast.success('Thông tin cá nhân đã được lưu thành công!');\r\n      navigate(\"/\");\r\n    } catch (error: any) {\r\n      toast.error(error.response?.data?.message || error.message || 'Cập nhật thông tin thất bại!');\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  // Helper function to convert dataURL to File (for avatar image)\r\n  const dataURLtoFile = (dataUrl: string, filename: string): File => {\r\n    const arr = dataUrl.split(',');\r\n    const mimeMatch = arr[0].match(/:(.*?);/);\r\n    if (!mimeMatch) {\r\n      throw new Error(\"Invalid data URL format\");\r\n    }\r\n    const mime = mimeMatch[1];\r\n    const bstr = atob(arr[1]);\r\n    let n = bstr.length;  // Changed const to let\r\n    const u8arr = new Uint8Array(n);\r\n\r\n    while (n--) u8arr[n] = bstr.charCodeAt(n);\r\n\r\n    return new File([u8arr], filename, { type: mime });\r\n  };\r\n\r\n  axios.interceptors.response.use(\r\n    response => response,\r\n    async error => {\r\n      if (error.response.status === 401 && error.response.data.message === \"Token không hợp lệ hoặc đã hết hạn.\") {\r\n        const refreshTokenResponse = await axios.post('/api/refresh-token', {}, {\r\n          headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\r\n        });\r\n  \r\n        if (refreshTokenResponse.status === 200) {\r\n          localStorage.setItem('token', refreshTokenResponse.data.token);\r\n          error.config.headers['Authorization'] = `Bearer ${refreshTokenResponse.data.token}`;\r\n          return axios(error.config); // retry the failed request\r\n        }\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gradient-to-r from-blue-500 to-purple-600 p-6 relative overflow-hidden\">\r\n      {step === \"welcome\" && <WelcomeScreen goToLogin={goToLogin} goToRegister={goToRegister} />}\r\n      {step === \"login\" && <LoginForm formData={formData} handleChange={handleChange} handleLogin={handleLogin} goToWelcome={goToWelcome} goToForgotPassword={goToForgotPassword} />}\r\n      {step === \"forgotpassword\" && <ForgotPassword goToLogin={goToLogin} />}\r\n      {step === \"register\" && <RegisterForm formData={formData} handleChange={handleChange} handleRegister={handleRegister} goToWelcome={goToWelcome} />}\r\n      {step === \"personalInfo\" && <PersonalInfoForm formData={formData} avatarPreview={avatarPreview} handleChange={handleChange} handleAvatarChange={handleAvatarChange} handleSubmitPersonalInfo={handleSubmitPersonalInfo} goToRegister={goToRegister} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthenticatePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}